configuration_model <- function(a){
g <- sample_degseq(rep(2,100), method="vl")
#return(as_edgelist(g))
return(12353)
}
a  = configuration_model(1)
## The vl generator
library(igraph)
configuration_model <- function(a){
g <- sample_degseq(rep(2,100), method="vl")
#return(as_edgelist(g))
return(12353)
}
a  = configuration_model(1)
library(igraph)
## The vl generator
library(igraph)
configuration_model <- function(a){
g <- sample_degseq(rep(2,100), method="vl")
#return(as_edgelist(g))
return(12353)
}
a  = configuration_model(1)
return(as_edgelist(g))
#return(12353)
}
return(as_edgelist(g))
g <- sample_degseq(rep(2,100), method="vl")
as_edgelist(g)
a  = configuration_model(1)
a  = configuration_model()
configuration_model <- function(){
g <- sample_degseq(rep(2,100), method="vl")
return(as_edgelist(g))
}
a  = configuration_model()
cx = source_python('Complexity.py')
library(reticulate)
install.packages("reticulate")
library("reticulate")
library("reticulate")
install.packages("reticulate")
library("reticulate")
library("reticulate")
library(igraph)
configuration_model <- function(a){
g <- sample_degseq(rep(2,100), method="vl")
return(as_edgelist(g))
}
install.packages("reticulate")
library("reticulate")
library(igraph)
configuration_model <- function(a){
g <- sample_degseq(rep(2,100), method="vl")
return(as_edgelist(g))
}
source_python("construct_network.py")
n
#include necessary libraries, and setting up the environment
library("reticulate")
library("igraph")
use_python("/zhaoy/anaconda3")
#function1 return the edges list to build the network in networkx
#function2 return the graph itself for testing in the R environment
configuration_model <- function(series){
g <- sample_degseq(series, method="vl")
return(as_edgelist(g))
}
return_graph<- function(series){
g <- sample_degseq(series, method="vl")
return(g)
}
#python functions
construct_network = source_python("construct_network.py")
cx = source_python("OdC.py")
power_law_generator = source_python("power_law_series.py")
#Building the network in python
n = 50
gamma = 3
gamma_list = seq(gamma-0.5,gamma+0.5,0.01)
results = list()
graphs = list()
for(i in gamma_list){
series = power_law_series(n,i)
edge_list = configuration_model(series)
g = construct_network(edge_list)
graphs = append(graphs,g)
result =   OdC(g)
results = append(results,result)
}
#Calculating the complexity
#OdC(g)
plot(gamma_list,results)
load("~/Documents/.RData")
install.packages("installr")
library(installr)
updateR()
version()
version
source("~/Documents/GitHub/Project/configuration_model.r")
setwd("~/Documents/GitHub/Project")
source("~/Documents/GitHub/Project/configuration_model.r")
C1espec_results
sum(series)
series = power_law_series(n,gamma_list[])
series = power_law_series(n,gamma_list[2.7])
sum(series)
series = power_law_series(n,2.7)
sum(series)
series = power_law_series(n,3.2)
sum(series)
plot(gamma_list,C1espec_results)
plot(gamma_list,C1espec_results,"l")
lines(gamma_list,C1espec_results);lines(gamma_list,MAri_results)
lines(gamma_list,C1espec_results);lines(gamma_list,mari_results)
lines(gamma_list,C1espec_results);lines(gamma_list,mari_results)
lines(gamma_list,C1espec_results)
lines(gamma_list,mari_results)
plot(gamma_list,mari_results)
lines(gamma_list,OdC_results)
plot(gamma_list,mari_results,"l");lines(gamma_list,OdC_results);lines(gamma_list,c1espec_results)
plot(gamma_list,mari_results,"l");lines(gamma_list,OdC_results);lines(gamma_list,C1espec_results)
plot(gamma_list,mari_results,"l");lines(gamma_list,OdC_results,c="red");lines(gamma_list,C1espec_results)
plot(gamma_list,mari_results,"l");lines(gamma_list,OdC_results,col="red");lines(gamma_list,C1espec_results)
plot(gamma_list,mari_results,"l",col="greed");lines(gamma_list,OdC_results,col="red");lines(gamma_list,C1espec_results,col="blue")
plot(gamma_list,mari_results,"l",col="green");lines(gamma_list,OdC_results,col="red");lines(gamma_list,C1espec_results,col="blue")
plot(gamma_list,mari_results,"l",col="greed",ylim=c(0,1));lines(gamma_list,OdC_results,col="red");lines(gamma_list,C1espec_results,col="blue")
plot(gamma_list,mari_results,"l",col="green",ylim=c(0,1));lines(gamma_list,OdC_results,col="red");lines(gamma_list,C1espec_results,col="blue")
plot(gamma_list,mari_results,"l",col="green",ylim=c(0,1))
lines(gamma_list,OdC_results,col="red")
lines(gamma_list,C1espec_results,col="blue")
lines(gamma_list,C1espec_results,col="blue",pch="+")
plot(gamma_list,mari_results,"l",col="green",ylim=c(0,1))
lines(gamma_list,OdC_results,col="red",pch="*")
lines(gamma_list,C1espec_results,col="blue",pch="+")
plot(gamma_list,mari_results,"l",col="green",ylim=c(0,1))
lines(gamma_list,OdC_results,col="red",pch="*")
lines(gamma_list,C1espec_results,col="blue",pch="+")
plot(gamma_list, C1espec_results, type="o", col="blue", pch="o", lty=1, ylim=c(0,110), ylab="y" )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(gamma_list, OdC_results, col="red", pch="*")
lines(gamma_list, OdC_results, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
# Adding a legend inside box at the location (2,40) in graph coordinates.
# Note that the order of plots are maintained in the vectors of attributes.
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, type="o", col="blue", pch="o", lty=1, ylim=c(0,1), ylab="y" )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(gamma_list, OdC_results, col="red", pch="*")
lines(gamma_list, OdC_results, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
# Adding a legend inside box at the location (2,40) in graph coordinates.
# Note that the order of plots are maintained in the vectors of attributes.
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, type="o", col="blue", lty=1, ylim=c(0,1), ylab="y" )
plot(gamma_list, C1espec_results, type="o", col="blue", lty=1, ylim=c(0,1), ylab="y" )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(gamma_list, OdC_results, col="red", pch="*")
lines(gamma_list, OdC_results, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
# Adding a legend inside box at the location (2,40) in graph coordinates.
# Note that the order of plots are maintained in the vectors of attributes.
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue", pch="o", lty=1, ylim=c(0,1), ylab="y" )
plot(gamma_list, C1espec_results, col="blue", pch="o", lty=1, ylim=c(0,1), ylab="y" )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(gamma_list, OdC_results, col="red", pch="*")
lines(gamma_list, OdC_results, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
# Adding a legend inside box at the location (2,40) in graph coordinates.
# Note that the order of plots are maintained in the vectors of attributes.
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue","l", lty=1, ylim=c(0,1), ylab="y" )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(gamma_list, OdC_results, col="red", pch="*")
lines(gamma_list, OdC_results, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
# Adding a legend inside box at the location (2,40) in graph coordinates.
# Note that the order of plots are maintained in the vectors of attributes.
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue",pch="*", lty=1, ylim=c(0,1), ylab="y" )
lines(gamma_list, OdC_results, col="red",lty=2)
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue",pch="*,"l", lty=1, ylim=c(0,1), ylab="y" )
lines(gamma_list, OdC_results, col="red",lty=2)
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue",pch="*","l", lty=1, ylim=c(0,1), ylab="y" )
lines(gamma_list, OdC_results, col="red",lty=2)
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="red",lty=2)
points(gamma_list, mari_results, col="dark red",pch="+")
lines(gamma_list, mari_results, col="dark red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="blue",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="red",lty=2)
lines(gamma_list, mari_results, col="dark red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
lines(gamma_list, mari_results, col="black red", lty=3)
plot(gamma_list, C1espec_results, col="blue",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="red",lty=2)
lines(gamma_list, mari_results, col="black", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="red",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="black", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
dev.new(width=5, height=4)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
dev.new(5,4)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(1,100,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
mari_results = mari_results/niter
OdC_results = OdC_results/niter
C1espec_results = C1espec_results/niter
dev.new(5,4)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c("y1","y2","y3"), col=c("blue","red","black"),
pch=c("o","*","+"),lty=c(1,2,3), ncol=1)
dev.new(5,4)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c("$C_{1e,spec}$","$OdC$","$MAri$"),
col=c("balck","blue","red"),
lty=c(1,2,3), ncol=1)
sults/niter
dev.new(5,4)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c("$C_{1e,spec}$","$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(5,3)
dev.new(5,3)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c("$C_{1e,spec}$","$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c("$C_{1e,spec}$","$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
legend(3.2,0.9,legend=c(expression("$C_{1e,spec}$"),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.2,0.9,legend=c(expression("$C_{1e,spec}$"),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
legend(3.0,0.9,legend=c(expression("$C_{1e,spec}$"),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression("C_{1e,spec}"),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
expression("C^3")
a = expression("C^3")
print(a)
C1espec_results[i] = C1espec_results[i]+C1espec(g)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(as.expression("C_{1e,spec}"),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(as.expression(bquote("C_{1e,spec}")),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('N'[M], ' = ', 4),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1))
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('N'[M], ' = ', 4)),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1))
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('N'[M], ' = ', 4)),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('C'["1e,spec"], ' = ', 4)),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('C'["1e,spec"])),"$OdC$","$MAri$"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.0,0.9,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.9,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,1), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.9,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,0.5), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.9,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,0.5), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.4,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
#include necessary libraries, and setting up the environment
library("reticulate")
library("igraph")
library("plotly")
use_python("/zhaoy/anaconda3")
#function1 return the edges list to build the network in networkx
#function2 return the graph itself for tespecing in the R environment
configuration_model <- function(series){
g <- sample_degseq(series, method="vl")
return(as_edgelist(g))
}
return_graph<- function(series){
g <- sample_degseq(series, method="vl")
return(g)
}
#python functions
source_python("R_functions.py")
#Building the network in python
n = 50
gamma = 3
gamma_list = seq(gamma-0.3,gamma+0.3,0.01)
mari_results = integer(length(gamma_list))
OdC_results = integer(length(gamma_list))
C1espec_results = integer(length(gamma_list))
graphs = list()
for(niter in 1:50){
for(i in 1:length(gamma_list)){
print(i)
series = power_law_series(n,gamma_list[i])
if(sum(series)%%2 !=0){
series[1]=series[1]+1
}
edge_list = configuration_model(series)
g = construct_network(edge_list)
graphs = append(graphs,g)
mari_results[i] = mari_results[i]+MAri(g)
OdC_results[i] = OdC_results[i]+OdC(g)
C1espec_results[i] = C1espec_results[i]+C1espec(g)
}
}
mari_results = mari_results/niter
OdC_results = OdC_results/niter
C1espec_results = C1espec_results/niter
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,0.5), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.4,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,0.5), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.4,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
legend(3.1,0.45,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
dev.new(3,5)
plot(gamma_list, C1espec_results, col="black",pch="*","l", lty=1, ylim=c(0,0.5), ylab="Complexity",xlab="Gamma" )
lines(gamma_list, OdC_results, col="blue",lty=2)
lines(gamma_list, mari_results, col="red", lty=3)
legend(3.1,0.45,legend=c(expression(paste('C'["1e,spec"])),"OdC","MAri"),
col=c("black","blue","red"),
lty=c(1,2,3), ncol=1)
save.image("~/Documents/GitHub/Project/.RData")
